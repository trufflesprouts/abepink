{"version":3,"sources":["Home/index.js","Code/index.js","Photo/index.js","About/index.js","Words/index.js","Words/PostStyle.js","Words/AWS.js","Words/Kirby.js","App.js","serviceWorker.js","index.js"],"names":["style","opacity","isPlaying","video","currentTime","paused","ended","readyState","caramella","React","useRef","raft","rockets","loft","bullet","piano","pathfinder","Style","target","rel","href","className","autoPlay","loop","muted","playsInline","ref","onClick","current","pause","play","src","type","alt","color","styled","div","photos","Gallery","map","p","key","padding","maxWidth","width","ul","to","PostStyle","language","xcode","showLineNumbers","id","name","Boolean","window","location","hostname","match","ReactDOM","render","useEffect","heap","load","path","component","AWS","Kirby","Words","Code","Photo","About","Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eda8fac5.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default () => {\n\treturn (\n\t\t<div>\n\t\t\t<p style={{opacity: 0.5}}>this page is intentionally left blank</p>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst isPlaying = (video) =>\n\t!!(\n\t\tvideo.currentTime > 0 &&\n\t\t!video.paused &&\n\t\t!video.ended &&\n\t\tvideo.readyState > 2\n\t);\n\nexport default () => {\n\tconst caramella = React.useRef(null);\n\tconst raft = React.useRef(null);\n\tconst rockets = React.useRef(null);\n\tconst loft = React.useRef(null);\n\tconst bullet = React.useRef(null);\n\tconst piano = React.useRef(null);\n\tconst pathfinder = React.useRef(null);\n\treturn (\n\t\t<Style>\n\t\t\t<ul>\n\t\t\t\t<p>\n\t\t\t\t\t<b>karma trade </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"http://karmatrade.shop/\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(website)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<p>[more info soon]</p>\n\t\t\t\t<p>\n\t\t\t\t\tworking on developing an online cloth swapping platform, complete with\n\t\t\t\t\ta virtual currency, and a fully- fledged e-commerce platform set to\n\t\t\t\t\tlaunch in fall 2020.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tutilized: Javascript, React, Node, Git, Firebase, Web Payments\n\t\t\t\t\t(Square), Figma, Adobe Illustrator.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<b>caramella </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://caramel.la/\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(website)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tplaysInline\n\t\t\t\t\tref={caramella}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (isPlaying(caramella.current)) caramella.current.pause();\n\t\t\t\t\t\telse caramella.current.play();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<source src=\"/static/caramella.mp4\" type=\"video/mp4\" />\n\t\t\t\t\tYour browser does not support the video tag.\n\t\t\t\t</video>\n\t\t\t\t<p>\n\t\t\t\t\tworked in a product team of three to design and develop a website\n\t\t\t\t\tmaker from scratch, using a full javascript stack. my responsibilities\n\t\t\t\t\tincluded working in the front-end and back-end of new features and\n\t\t\t\t\tsupporting ongoing infrastructure maintenance.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tutilized: Javascript, AWS, MongoDB, Jest, GraphQL, TypeScript, SVG\n\t\t\t\t\tanimations, DNS.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<b>tamerny </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://drive.google.com/drive/folders/1F9KkALPDbdjRDnrEnj2IGeCTQauZu6FX?usp=sharing\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(gallery)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<img src=\"/static/tamerny.jpg\" alt=\"\" />\n\t\t\t\t<p>\n\t\t\t\t\tdesigned and built the front-end for operators to accept and fulfill\n\t\t\t\t\torders from users, based on apis developed by the team.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<b>raft </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://drive.google.com/file/d/1OdMYo7fLljPrVzP3qzvlEJr52XwIW9e5/view?usp=sharing\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(video)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tplaysInline\n\t\t\t\t\tref={raft}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (isPlaying(raft.current)) raft.current.pause();\n\t\t\t\t\t\telse raft.current.play();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<source src=\"/static/raft.mp4\" type=\"video/mp4\" />\n\t\t\t\t\tYour browser does not support the video tag.\n\t\t\t\t</video>\n\t\t\t\t<p>\n\t\t\t\t\te-commerce platform built using reat-native for social merchants to\n\t\t\t\t\tsimplify the purchasing process with simple and intuitive shopping\n\t\t\t\t\texperiences.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<h2 style={{ color: \"blue\" }}>random projects:</h2>\n\t\t\t\t</p>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<b>rocket launches </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://rockets.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(website)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tplaysInline\n\t\t\t\t\tref={rockets}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (isPlaying(rockets.current)) rockets.current.pause();\n\t\t\t\t\t\telse rockets.current.play();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<source src=\"/static/rockets.mp4\" type=\"video/mp4\" />\n\t\t\t\t\tYour browser does not support the video tag.\n\t\t\t\t</video>\n\t\t\t\t<p>\n\t\t\t\t\tweb app displaying upcoming rocket launches around the world, based on\n\t\t\t\t\tthe launch library api. supports pwa features and acts like a native\n\t\t\t\t\tapp on android.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<b>pathfinder </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://truffles-pathfinder.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(website)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tplaysInline\n\t\t\t\t\tref={pathfinder}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (isPlaying(pathfinder.current)) pathfinder.current.pause();\n\t\t\t\t\t\telse pathfinder.current.play();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<source src=\"/static/pathfinder.mp4\" type=\"video/mp4\" />\n\t\t\t\t\tYour browser does not support the video tag.\n\t\t\t\t</video>\n\t\t\t\t<p>\n\t\t\t\t\tbreadth-first Javascript pathfinding algorithm with visualization.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<b>the loft </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://truffles-the-loft.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(website)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tplaysInline\n\t\t\t\t\tref={loft}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (isPlaying(loft.current)) loft.current.pause();\n\t\t\t\t\t\telse loft.current.play();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<source src=\"/static/loft.mp4\" type=\"video/mp4\" />\n\t\t\t\t\tYour browser does not support the video tag.\n\t\t\t\t</video>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<b>piano app </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://www.youtube.com/watch?v=VkWgVwtP1rk\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(video)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tplaysInline\n\t\t\t\t\tref={piano}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (isPlaying(piano.current)) piano.current.pause();\n\t\t\t\t\t\telse piano.current.play();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<source src=\"/static/piano.mp4\" type=\"video/mp4\" />\n\t\t\t\t\tYour browser does not support the video tag.\n\t\t\t\t</video>\n\t\t\t\t<p className=\"margin-top\">\n\t\t\t\t\t<b>bullet design </b>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://truffles-bullet-design.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\t(website)\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tplaysInline\n\t\t\t\t\tref={bullet}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (isPlaying(bullet.current)) bullet.current.pause();\n\t\t\t\t\t\telse bullet.current.play();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<source src=\"/static/bullet.mp4\" type=\"video/mp4\" />\n\t\t\t\t\tYour browser does not support the video tag.\n\t\t\t\t</video>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://catch-app.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\tseafood market\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://mockstagram.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\tmockstagram\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t{/* <li>\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\thref=\"https://morning-island-23195.herokuapp.com\"\n\t\t\t\t>\n\t\t\t\t\tsecretly\n\t\t\t\t</a>\n\t\t\t</li> */}\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://milkdesign.herokuapp.com/\"\n\t\t\t\t\t>\n\t\t\t\t\t\tmilk design\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://truffles-tictacto.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttic-tac-to\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://truffles-compass.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\tmobile compass\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\thref=\"https://truffles-wiki-search.surge.sh/\"\n\t\t\t\t\t>\n\t\t\t\t\t\twikipedia search\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</Style>\n\t);\n};\n\nconst Style = styled.div`\n\tvideo,\n\timg {\n\t\twidth: 100%;\n\t\tmax-width: 640px;\n\t\tmargin: 0.2em 0;\n\t\tpadding: 0;\n\t}\n\timg,\n\tvideo {\n\t\tbox-shadow: 0 0.5px 0 2px #efefef;\n\t}\n\tp {\n\t\tmax-width: 640px;\n\t}\n\t.margin-top {\n\t\tmargin-top: 1em;\n\t}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst photos = [ 0, 22, 23, 24, 31, 32, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 27, 25, 20, 21 ]; // prettier-ignore\n\nexport default () => {\n\treturn (\n\t\t<Gallery>\n\t\t\t<ul className=\"navigation placeholder\">\n\t\t\t\t<li>abe baali</li>\n\t\t\t</ul>\n\t\t\t{photos.map(p => (\n\t\t\t\t<img key={p} src={`/static/photos/${p}.jpg`} alt=\"\" />\n\t\t\t))}\n\t\t\t<div style={{ padding: \"1px\" }}></div>\n\t\t</Gallery>\n\t);\n};\n\nconst Gallery = styled.div`\n\t@media (max-width: 860px) {\n\t\t.navigation {\n\t\t\tdisplay: none !important;\n\t\t}\n\t\timg {\n\t\t\twidth: 100%;\n\t\t\tmargin-top: 1em;\n\t\t\t:nth-child(2) {\n\t\t\t\tmargin-top: 0;\n\t\t\t}\n\t\t}\n\t}\n\t@media (min-width: 861px) {\n\t\tposition: absolute;\n\t\tdisplay: flex;\n\t\tleft: 0;\n\t\ttop: 1em;\n\t\tbottom: 1em;\n\t\tright: 0;\n\t\tpadding: 0 1em;\n\t\toverflow: scroll;\n\t\t-ms-overflow-style: none;\n\t\t::-webkit-scrollbar {\n\t\t\tdisplay: none;\n\t\t}\n\t\timg {\n\t\t\theight: 100%;\n\t\t\tmargin-right: 1em;\n\t\t}\n\t}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default () => {\n\treturn (\n\t\t<Style>\n\t\t\t<p>\n\t\t\t\t<b>hi, i am abe.</b> i am a sophomore at the university of illinois\n\t\t\t\turbana-champaign studying aerospace engineering and computer science.\n\t\t\t\tcurrently i’m working with{\" \"}\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\thref=\"https://karmatrade.shop/\"\n\t\t\t\t>\n\t\t\t\t\tkarma trade\n\t\t\t\t</a>{\" \"}\n\t\t\t\tdeveloping an online cloth swapping platform. i worked previously with{\" \"}\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://caramel.la/\">\n\t\t\t\t\tcaramella\n\t\t\t\t</a>{\" \"}\n\t\t\t\tcreating a new online publishing platform that’s focused on creating\n\t\t\t\tbeautiful custom designs, i did lots of things including full stack\n\t\t\t\tdevelopment, testing, and ui/ux design. on the side, i enjoy working on\n\t\t\t\ttough problems, that’s why i’m focusing on machine learning and ai. i\n\t\t\t\thate most dev tools and consider them to be a necessary evil. you can\n\t\t\t\tfind me on the{\" \"}\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\thref=\"https://www.instagram.com/abe.baali/\"\n\t\t\t\t>\n\t\t\t\t\tinstagrams\n\t\t\t\t</a>\n\t\t\t\t, email me at abebaaali@gmail.com, check out{\" \"}\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/static/cv.pdf\">\n\t\t\t\t\tmy résumé\n\t\t\t\t</a>\n\t\t\t\t, buy me a gift from{\" \"}\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\thref=\"https://www.amazon.com/hz/wishlist/ls/25UJ0TD4Q7RQN?&sort=default\"\n\t\t\t\t>\n\t\t\t\t\tamazon\n\t\t\t\t</a>{\" \"}\n\t\t\t\tor find me trufflesprouts on github. thank you for reading, pls like &\n\t\t\t\tsubscribe!\n\t\t\t</p>\n\t\t\t<img\n\t\t\t\tsrc=\"/static/me.jpg\"\n\t\t\t\tstyle={{ maxWidth: \"240px\", width: \"50%\" }}\n\t\t\t\talt=\"\"\n\t\t\t/>\n\t\t\t<p className=\"caption\">pictured on the right</p>\n\t\t</Style>\n\t);\n};\n\nconst Style = styled.ul`\n\timg {\n\t\tmargin-top: 1em;\n\t}\n\tp {\n\t\tmax-width: 640px;\n\t}\n\t.caption {\n\t\topacity: 0.6;\n\t\tfont-size: 0.8em;\n\t\tmargin-top: 0.2em;\n\t}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n\treturn (\n\t\t<Style>\n\t\t\t<p>\n\t\t\t\t<Link to=\"/words/node-user-login-with-aws-face-recognition\">Node User Login With AWS’ Face Recognition</Link>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<Link to=\"/words/kirby-dev-setup\">The Perfect Kirby Development Setup</Link>\n\t\t\t</p>\n\t\t\t<p>[more words soon, hopefully]</p>\n\t\t</Style>\n\t);\n};\n\nconst Style = styled.ul`\n\tp {\n\t\tmax-width: 640px;\n\t\tmargin-bottom: 0.5em;\n\t}\n`;\n","import styled from \"styled-components\";\nexport default styled.div`\n\tmax-width: 640px;\n\th1 {\n\t\tmargin-bottom: 0.5em;\n\t}\n\th2 {\n\t\tmargin: 1em 0;\n\t}\n\tp {\n\t\tmargin: 0.7em 0;\n\t\tline-height: 1.3em;\n\t}\n\tul,\n\tol {\n\t\tpadding-left: 2em;\n\t}\n\thr {\n\t\tmargin: 2em 0;\n\t\theight: 20px;\n\t\tbackground: url(/static/zig-zag.png) repeat-x 0 0;\n\t\tborder: 0;\n\t}\n\t.inline-code {\n\t\tdisplay: inline-block !important;\n\t\tfont-size: 0.8em;\n\t\tpadding: 0.2em 0.8em !important;\n\t\tline-height: 1em;\n\t\tmargin-bottom: -0.4em;\n\t}\n\tpre {\n\t\tbackground: #f3f3f3 !important;\n\t\tborder: 1px solid #d2d2d2;\n\t}\n\tpre,\n\tpre * {\n\t\tfont-family: \"Roboto Mono\", \"Source Code Pro\", monospace;\n\t}\n\t.react-syntax-highlighter-line-number {\n\t\topacity: 0.5;\n\t}\n`;\n","import React from \"react\";\nimport Code from \"react-syntax-highlighter\";\nimport { xcode } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport PostStyle from \"./PostStyle\";\n\nconst htmlstring1 = `<!-- Supports getUserMedia -->\n<button id=\"take-photo\" type=\"button\" name=\"take-photo\">\n  Take Picture\n</button>\n<div class=\"camera-container\">\n  <video id=\"camera-stream\"></video>\n  <img id=\"snap\">\n  <canvas></canvas>\n</div>\n\n<!-- Does Not Support getUserMedia -->\n<form method=\"post\"enctype=\"multipart/form-data\" action=\"/auth\">\n  <label for=\"auth-pic\">Authenticate</label>\n  <input\n    id=\"auth-pic\"\n    type=\"file\"\n    style=\"display:none;\"\n    name=\"file\"\n    onchange=\"this.form.submit();\"\n  >\n</form>`;\n\nexport default () => {\n\treturn (\n\t\t<PostStyle>\n\t\t\t<h1 style={{ color: \"#5f00ba\" }}>\n\t\t\t\tNode User Login With AWS’ Face Recognition\n\t\t\t</h1>\n\t\t\t<p>\n\t\t\t\tSo the other day I wanted to make a Node app just for practice, and I\n\t\t\t\tthought wouldn’t be cool if there’s a dead simple app that stores your\n\t\t\t\tsecrets and can only be accessed by you? it should be absolutely\n\t\t\t\tseamless, like talking to a confidant, once it sees who you are it knows\n\t\t\t\twhat to show. The app we will be building is a note taking app. There\n\t\t\t\tare no ‘accounts’, each time you start the the app it asks you to\n\t\t\t\tauthenticate with your face, if it is your first time you’ll have a\n\t\t\t\tblank page where you can add notes, else if you already have notes\n\t\t\t\tpreviously added you’ll be able to see/edit them.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo see the end result click{\" \"}\n\t\t\t\t<a href=\"https://morning-island-23195.herokuapp.com\">here</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tFor the face recognition, I will use Amazon Rekognition, which is their\n\t\t\t\tdeep learning-based image recognition API. I would also like to add that\n\t\t\t\tthis idea is a complete disaster when it comes to security, since anyone\n\t\t\t\twith a picture of the user can access their notes 🤣, maybe it can be\n\t\t\t\tused as a second factor for authentication.\n\t\t\t</p>\n\t\t\t<p>Anyway, let’s get to it.</p>\n\t\t\t<hr />\n\t\t\t<h2>First, Getting That Sexy Image</h2>\n\t\t\t<p>\n\t\t\t\tHere we bump into the limitations of the web since not all browsers\n\t\t\t\tsupport accessing the device’s camera using{\" \"}\n\t\t\t\t<Code language=\"htmlbars\" style={xcode} className=\"inline-code\">\n\t\t\t\t\tnavigator.getUserMedia\n\t\t\t\t</Code>{\" \"}\n\t\t\t\t(looking at you Safari), we will have to fall back to{\" \"}\n\t\t\t\t<Code language=\"htmlbars\" style={xcode} className=\"inline-code\">\n\t\t\t\t\t&lt;input type=\"file\"&gt;\n\t\t\t\t</Code>\n\t\t\t\t.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tIf the browser supports{\" \"}\n\t\t\t\t<Code language=\"htmlbars\" style={xcode} className=\"inline-code\">\n\t\t\t\t\tnavigator.getUserMedia\n\t\t\t\t</Code>{\" \"}\n\t\t\t\twe will:\n\t\t\t</p>\n\t\t\t<ol>\n\t\t\t\t<li>Access the camera and get a video stream using getUserMedia.</li>\n\t\t\t\t<li>Play the stream on a video element.</li>\n\t\t\t\t<li>\n\t\t\t\t\tWhen the user takes the picture, we draw the current frame on a canvas\n\t\t\t\t\telement.\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tTransform the canvas into an image dataURL then send it to the server.\n\t\t\t\t</li>\n\t\t\t</ol>\n\n\t\t\t<p>Else:</p>\n\t\t\t<ol>\n\t\t\t\t<li>Display an input of type file</li>\n\t\t\t\t<li>When the user submits the input, upload the file to the server.</li>\n\t\t\t</ol>\n\n\t\t\t<p>The HTML markup will look like this:</p>\n\t\t\t<Code language=\"htmlbars\" style={xcode} showLineNumbers>\n\t\t\t\t{htmlstring1}\n\t\t\t</Code>\n\t\t\t<p>And the JS for accessing the camera will look like this:</p>\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`if(!navigator.getUserMedia){\n  // When not supported, switch to 'input type file'\n  switchImageInput();\n} else {\n  // Request the camera.\n  navigator.getMedia({video: true},\n    // Success Callback\n    function(stream){\n      // Create an object URL for the video stream and\n      // set it as src of our HTLM video element.\n      video.src = window.URL.createObjectURL(stream);\n      video.play();\n      video.onplay = function() {\n        showVideo();\n      };\n    },\n    // Error Callback\n    function(err){\n      switchImageInput();\n    }\n  );\n}`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tNow that we have a video stream, we will make a function that takes a\n\t\t\t\tsnapshot of the video.\n\t\t\t</p>\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`function takeSnapshot(){\n  var hidden_canvas = document.querySelector('canvas'),\n      context = hidden_canvas.getContext('2d');\n  var width = video.videoWidth,\n      height = video.videoHeight;\n  if (width && height) {\n    hidden_canvas.width = width;\n    hidden_canvas.height = height;\n    context.drawImage(video, 0, 0, width, height);\n    return hidden_canvas.toDataURL('image/jpeg');\n  }\n}`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tNow we tie the function to our button, and send the image to the server.\n\t\t\t</p>\n\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`take_photo_btn.addEventListener(\"click\", function(event){\n  event.preventDefault();\n  var snap = takeSnapshot();\n  sendImageToServer(snap);\n  // Show image.\n  image.setAttribute('src', snap);\n  image.classList.add(\"visible\");\n  video.pause();\n});\n\nfunction sendImageToServer(imageData) {\n  var method = 'post';\n  var path = '/auth';\n  var data = JSON.stringify({image: imageData});\n\n  var form = document.createElement(\"form\");\n  form.setAttribute(\"method\", method);\n  form.setAttribute(\"action\", path);\n\n  var hiddenField = document.createElement(\"input\");\n  hiddenField.setAttribute(\"type\", \"hidden\");\n  hiddenField.setAttribute(\"name\", \"image\");\n  hiddenField.setAttribute(\"value\", imageData);\n\n  form.appendChild(hiddenField);\n\n  document.body.appendChild(form);\n  form.submit();\n};`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tYou can see the full{\" \"}\n\t\t\t\t<a href=\"https://github.com/trufflesprouts/secretly/blob/master/views/login.ejs\">\n\t\t\t\t\tHTML\n\t\t\t\t</a>\n\t\t\t\t,{\" \"}\n\t\t\t\t<a href=\"https://github.com/trufflesprouts/secretly/blob/master/public/login.css\">\n\t\t\t\t\tCSS\n\t\t\t\t</a>{\" \"}\n\t\t\t\tand{\" \"}\n\t\t\t\t<a href=\"https://github.com/trufflesprouts/secretly/blob/master/public/login.js\">\n\t\t\t\t\tJS\n\t\t\t\t</a>\n\t\t\t\t.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tNow that the user POSTed their picture, we’ll need to handle that POST\n\t\t\t\trequest in Node. I’m using{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\texpress\n\t\t\t\t</Code>{\" \"}\n\t\t\t\twith{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tmulter\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tto handle the file uploading from the form input.\n\t\t\t</p>\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`const express = require('express');\nconst multer  = require('multer');\nconst bodyParser = require('body-parser');\n\nconst authController = require('./controllers/auth');\n\nconst app = express();\n\nconst upload = multer({\n  dest: 'uploads/',\n  fileFilter: function(req, file, cb) {\n    var filetypes = /jpeg|jpg|png/;\n    var mimetype = filetypes.test(file.mimetype);\n    var extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n    if (mimetype && extname) {\n      return cb(null, true);\n    }\n    cb(\"Error: File upload only supports the following filetypes - \" + filetypes);\n  }\n});\n\napp.use(bodyParser.urlencoded({limit: '5mb'}));\n\napp.post('/auth', upload.single('file'), authController.index);`}\n\t\t\t</Code>\n\t\t\t<p>Our authController:</p>\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`const path = require('path');\nconst sharp = require('sharp');\nconst appDir = path.dirname(require.main.filename);\n\n/**\n * POST /auth\n * Authentication Page.\n */\n\nexports.index = (req, res) => {\n  if (req.file) {\n    const fileName = appDir + '/' + req.file.path;\n    // Use sharp to resize the image\n    sharp(fileName).resize(null, 700).toBuffer(function (err, buf) {\n      // TODO: Authenticate using the image buffer\n    });\n  } else {\n    const imageBuffer = getBase64Buffer(req.body.image);\n    // TODO: Authenticate using the image buffer\n  }\n};\n\nfunction getBase64Buffer(dataString) {\n  const matches = dataString.match(/^data:([A-Za-z-+\\/]+);base64,(.+)$/),\n    response = {};\n\n  if (matches.length !== 3) {\n    return new Error('Invalid input string');\n  }\n\n  response.type = matches[1];\n  response.data = new Buffer(matches[2], 'base64');\n\n  return response;\n}`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tAfter getting the image buffer, we will pass it to our authentication\n\t\t\t\tfunction.\n\t\t\t</p>\n\n\t\t\t<hr />\n\n\t\t\t<h2 id=\"second-user-authentication\">Second, User Authentication</h2>\n\n\t\t\t<p>\n\t\t\t\tSince we are using AWS you’ll need to set up an AWS account and create\n\t\t\t\tan administrator user, for more info click{\" \"}\n\t\t\t\t<a href=\"http://docs.aws.amazon.com/rekognition/latest/dg/setting-up.html\">\n\t\t\t\t\there\n\t\t\t\t</a>\n\t\t\t\t.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tThen install the{\" \"}\n\t\t\t\t<a href=\"http://docs.aws.amazon.com/cli/latest/userguide/installing.html\">\n\t\t\t\t\tAWS CLI\n\t\t\t\t</a>\n\t\t\t\t.\n\t\t\t</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ pip install --upgrade --user awscli`}\n\t\t\t</Code>\n\t\t\t<p>Configure it:</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ aws configure\n# AWS Access Key ID: YOUR ACCESS ID\n# AWS Secret Access Key:  YOUR SECRET KEY\n# Default region name:  YOUR REGION\n# Default output format: json`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tIn order to use the Rekognition service to register our users and then\n\t\t\t\tlook them up when trying to log in again, we’ll have to store their\n\t\t\t\timages somehow. Thankfully that won’t be necessary since AWS Rekognition\n\t\t\t\toffers a storage-based API, using the IndexFaces operation we can store\n\t\t\t\tthe important facial information of our users without storing the actual\n\t\t\t\timage bytes.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tTo do this we’ll first need to create a face collection, which is a\n\t\t\t\tcontainer for persisting faces detected by the IndexFaces API. Using the\n\t\t\t\tAWS CLI provide a collection-id (string) which will use in the future to\n\t\t\t\tstore our users’ facial information.\n\t\t\t</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ aws rekognition create-collection --collection-id \"YOUR-COLLECTION-ID\"`}\n\t\t\t</Code>\n\t\t\t<p>Make sure it was successfully created:</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ aws rekognition list-collections\n#{\n#    \"CollectionIds\": [\n#        \"YOUR-COLLECTION-ID\"\n#    ]\n#}`}\n\t\t\t</Code>\n\t\t\t<p>Here’s how you delete a collection:</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ aws rekognition delete-collection --collection-id \"YOUR-COLLECTION-ID\"`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tNow that we have our collection we can use{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tindexFaces\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tto add faces to the collection, and use{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tsearchFacesByImage\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tto search the collection for a face supplied by an image.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tFirst we need to configure AWS in our app, add a{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\taws-config.json\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfile like this one:\n\t\t\t</p>\n\n\t\t\t<Code language=\"json\" style={xcode} showLineNumbers>\n\t\t\t\t{`{\n  \"accessKeyId\": \"YOUR-ACCESS-KEY-ID\",\n  \"secretAccessKey\": \"YOUR-SECRET-ACCESS-KEY\",\n  \"region\": \"YOUR-REGION\"\n}`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tThen we’ll create a{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tfaceAuth\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfunction that takes an image buffer and callback, which will call the\n\t\t\t\tcallback indicating whether there’s a face in the image and if there is,\n\t\t\t\treturn the data.\n\t\t\t</p>\n\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`const AWS = require('aws-sdk');\nconst uuid = require('node-uuid');\n\nAWS.config.loadFromPath(__dirname +'/aws-config.json');\nconst rekognition = new AWS.Rekognition({apiVersion: '2016-06-27'});\n\n\nexports.faceAuth = function (imageBuffer, cb) {\n  var params = {\n    CollectionId: 'YOUR-COLLECTION-ID',\n    Image: {\n      Bytes: imageBuffer\n    },\n    FaceMatchThreshold: 90,\n    MaxFaces: 1 // We only need the face with the most resemblance\n  };\n  rekognition.searchFacesByImage(params, function(err, data) {\n    if (data && !err) {\n      // If there's a face in the image\n      cb(true, data, imageBuffer);\n    } else {\n      // If there's no face in the image\n      cb(false, {});\n    }\n  });\n}`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tReturning to the{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tauthControlle\n\t\t\t\t</Code>{\" \"}\n\t\t\t\twe’ll use our{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tfaceAuth\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfunction and proivde a callback:\n\t\t\t</p>\n\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`const path = require('path');\nconst sharp = require('sharp');\nconst appDir = path.dirname(require.main.filename);\n\n/**\n * POST /auth\n * Authentication Page.\n */\n\nexports.index = (req, res) => {\n+ const authCallback = function(faceFound, data, imageBuffer) {\n+   if (faceFound) {\n+     if (userExsits(data).status) {\n+       renderUserPage(userExsits(data).userId, res);\n+     } else {\n+       createUser(imageBuffer, function(userId) {\n+         renderUserPage(userId, res);\n+       });\n+     }\n+   } else {\n+     res.redirect('/error-no-face-found');\n+   }\n+ }\n\n  if (req.file) {\n    const fileName = appDir + '/' + req.file.path;\n    sharp(fileName).resize(null, 700).toBuffer(function (err, buf) {\n+     faceAuth(buf, authCallback);\n    });\n  } else {\n    const imageBuffer = getBase64Buffer(req.body.image);\n+   faceAuth(imageBuffer.data, authCallback);\n  }\n};`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tAbove I used two functions{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tuserExsits\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tand{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tcreateUser\n\t\t\t\t</Code>\n\t\t\t\t, the former checks if AWS returned a{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tFaceMatches\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tobject, if it hasn’t that means this a new user and we have to index him\n\t\t\t\tin our collection. This is where{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tcreateUser\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tcomes in, it takes an image buffer and callback, it uses the{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tindexFaces\n\t\t\t\t</Code>{\" \"}\n\t\t\t\toperation to index the face to our collection and create a user in our\n\t\t\t\tdatabase for storing notes, which I won’t be getting into here.\n\t\t\t</p>\n\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`const userExsits = function(data) {\n  if (data.FaceMatches.length === 0) {\n    return {\n      status:false,\n      userId:null\n    };\n  } else if (data.FaceMatches.length > 0) {\n    return {\n      status:true,\n      userId:data.FaceMatches[0].Face.ExternalImageId\n    };\n  }\n}\n\nmodule.exports = userExsits;`}\n\t\t\t</Code>\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`exports.createUser = function(imageBuffer, cb) {\n  const newUserId = uuid.v4();\n\n  // Add user to the database with newUserId.\n\n  ...\n\n  // Index the user's face with their unique ID,\n  // which is the same for database\n\n  const params = {\n    CollectionId: \"secretsUsers\",\n    DetectionAttributes: [\n    ],\n    ExternalImageId: newUserId,\n    Image: {\n     Bytes: imageBuffer\n    }\n   };\n\n  rekognition.indexFaces(params, function(err, data) {\n    if (err) {\n      console.log(err, err.stack);\n    } else {\n      cb(newUserId);\n    }\n  });\n}`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tNow that we the user ID we can query the database for their data and\n\t\t\t\trender it. I skipped the database and user data management part because\n\t\t\t\tit is pretty straight forward. Just create a database (firebase if\n\t\t\t\tyou’re lazy), and create a user with the same ID as the{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tExternalImageId\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tin your Rekognition collection. When the user comes back again, request\n\t\t\t\tthe data using the{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tExternalImageId\n\t\t\t\t</Code>\n\t\t\t\t.\n\t\t\t</p>\n\t\t</PostStyle>\n\t);\n};\n","import React from \"react\";\nimport Code from \"react-syntax-highlighter\";\nimport { xcode } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport PostStyle from \"./PostStyle\";\n\nexport default () => {\n\treturn (\n\t\t<PostStyle>\n\t\t\t<h1 style={{ color: \"#cca000\" }}>The Perfect Kirby Development Setup</h1>\n\n\t\t\t<p>\n\t\t\t\tIf you already know what Kirby is, <a href=\"#setup\">click</a> here to\n\t\t\t\tskip the introduction.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tIf you plan on building websites for clients, chances are they will ask\n\t\t\t\tfor a way to add/administer content, i.e., a content management system.\n\t\t\t\tProblem is, most CMSs are just plain terrible for either the developer\n\t\t\t\tor the client, most times they give clients either too much freedom to\n\t\t\t\tscrewup everything (Wordpress), or they don’t give enough (Siteleaf,\n\t\t\t\tCloudcannon).\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\t<a href=\"https://getkirby.com/\">Kirby</a> to the rescue!, it is similar\n\t\t\t\tto Jekyll (what I’m using for this lovely blog) in that it is a static\n\t\t\t\tsite generator and does not require a database, it is also super\n\t\t\t\tdeveloper friendly and gives you full control without making a lot of\n\t\t\t\tassumptions and forcing you to deal with them.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tThe best part about Kirby is that it takes all the developer\n\t\t\t\tfriendliness from Jekyll and adds a simple CMS on top of it. Put it\n\t\t\t\tsimply, it has the best CMS, you can easily give just the right amount\n\t\t\t\tof control to the client, its “Panel” is logical, straightforward and\n\t\t\t\tdoes not have much of a learning curve.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tLearn more about Kirby <a href=\"https://getkirby.com/\">here</a>.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\t<a name=\"setup\"></a>\n\t\t\t\tIn this guide we will use Gulp to serve our Kirby site locally, use\n\t\t\t\tSASS, autoprefixer, uglifycss, and deploy the site to Heroku.\n\t\t\t</p>\n\n\t\t\t<hr></hr>\n\n\t\t\t<h2 id=\"1-serving-kirby-locally\">1. Serving Kirby Locally</h2>\n\n\t\t\t<p>\n\t\t\t\tIn order to start developing you’ll need to serve the site locally using\n\t\t\t\ta PHP server. Most people use MAMP (even in the docs), which I think is\n\t\t\t\ttoo big and bloaty since you won’t be needing a MySQL database with\n\t\t\t\tKirby.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tWhat I use instead is{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulp-connect-php\n\t\t\t\t</Code>{\" \"}\n\t\t\t\twith Gulp (obviously). This means we’ll need to setup Gulp first. To\n\t\t\t\tsetup Gulp, we’ll need Node and NPM if you don’t have that already\n\t\t\t\tdownload it <a href=\"https://nodejs.org/en/\">here</a>.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tNow that you have Node and NPM, initiate NPM in your project folder from\n\t\t\t\tthe terminal:\n\t\t\t</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ cd path/to/project\n$ npm init`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tFill in the package details when asked, or you can just press enter\n\t\t\t\tsince it is not really that important. Then, install Gulp globally with\n\t\t\t\tNPM:\n\t\t\t</p>\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ npm install gulp-cli -g`}\n\t\t\t</Code>\n\t\t\t<p>And locally:</p>\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ npm install gulp`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tThen, install{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulp-connect-php\n\t\t\t\t</Code>\n\t\t\t\t:\n\t\t\t</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ npm install gulp-connect-php`}\n\t\t\t</Code>\n\t\t\t<p>Make a gulp configuration file:</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ touch gulpfile.js`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tWe’ll need to configure Gulp to serve PHP using{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulp-connect-php\n\t\t\t\t</Code>\n\t\t\t\t, in{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulpfile.js\n\t\t\t\t</Code>\n\t\t\t\t:\n\t\t\t</p>\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`// First, include gulp and gulp-connect-php\nvar gulp          = require('gulp');\n    connect       = require('gulp-connect-php'),\n\n// Second, create a task to start a PHP server\ngulp.task('serve', function() {\n  connect.server();\n});\n\n// Third, set the 'serve' task to be the default task\ngulp.task('default', ['serve']);s`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tNow, in your project directory just use{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulp\n\t\t\t\t</Code>\n\t\t\t\t, it will automatically use our default task:\n\t\t\t</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ gulp\n#[00:00:00] Using gulpfile ~/path/to/project/gulpfile.js\n#[00:00:00] Starting 'serve'...\n#[00:00:00] Finished 'serve' after 7.82 ms\n#[00:00:00] Starting 'default'...\n#[00:00:00] Finished 'default' after 103 μs\n#PHP 5.6.30 Development Server started at date, time\n#Listening on http://127.0.0.1:8000\n#Press Ctrl-C to quit.`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tGo to <a href=\"http://127.0.0.1:8000\">127.0.0.1:8000</a> and voilà!,\n\t\t\t\tsite served.\n\t\t\t</p>\n\t\t\t<hr />\n\t\t\t<h2 id=\"2-using-sass-and-compiling-css\">\n\t\t\t\t2. Using SASS and Compiling CSS\n\t\t\t</h2>\n\n\t\t\t<p>\n\t\t\t\tIf you’re working on any reasonably sized project, you’ll want to use\n\t\t\t\tSASS instead of CSS, otherwise, you’ll keep repeating yourself and end\n\t\t\t\tup with large CSS files that are hard to change.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tThe way Kirby deals with CSS is that you have all your styles in{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tassets/css/templates/\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfor each template you have a CSS file name after the template, e.g. for\n\t\t\t\ta template named{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tpost\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tyou need a file{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tassets/css/templates/post.css\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tand you load this file by using{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t&lt;?php echo css('@auto') ?&gt;\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tin your template.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tTo use SASS, we need to mirror the CSS file structure, so make a folder\n\t\t\t\tnext to{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tassets/css/\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tnamed{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tsass\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tand make a folder named{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\ttemplates\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tinside the{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tsass\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfolder. Now we have:\n\t\t\t</p>\n\n\t\t\t<Code language=\"plaintext\" style={xcode} showLineNumbers>\n\t\t\t\t{`\n                Project\n|-- assets\n|   |-- css\n|   |   --- templates\n|   |       |-- home.css\n|   |       |-- post.css\n|   |       --- ...\n|   |-- sass\n|   |   --- templates\n|   |       |-- home.scss\n|   |       |-- post.scss\n|   |       --- ...\n|   --- ...\n|-- index.php\n|-- gulpfile.js\n--- ...`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tNext up, we need to compile{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t.scss\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfiles inside the{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tsass\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfolder automatically while also keeping the same file structure because\n\t\t\t\tKirby relies on that structure to autoload styles.\n\t\t\t</p>\n\n\t\t\t<p>Since we are already using Gulp, we’ll setup SASS with Gulp:</p>\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ npm install gulp-sass`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tIn{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulpfile.js\n\t\t\t\t</Code>\n\t\t\t\t, require{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulp-sass\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tand watch/compile{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t.scss\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfiles:\n\t\t\t</p>\n\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`var gulp          = require('gulp');\n    connect       = require('gulp-connect-php'),\n+   sass          = require('gulp-sass'); // Require gulp-sass\n\ngulp.task('serve', function() {\n    connect.server();\n    // Watch .scss files\n+   gulp.watch(\"assets/sass/**/*.scss\", ['sass']);\n});\n\n// A task that compiles sass to css\n+ gulp.task('sass', function() {\n+     return gulp.src(\"assets/sass/**/*.scss\")\n+         .pipe(sass())\n+         // Put compiled files in \"assets/css\"\n+         .pipe(gulp.dest(\"assets/css\"));\n+ });\n\ngulp.task('default', ['serve']);`}\n\t\t\t</Code>\n\t\t\t<p>To make sure everything works:</p>\n\n\t\t\t<ol>\n\t\t\t\t<li>\n\t\t\t\t\tMove any{\" \"}\n\t\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t\t.css\n\t\t\t\t\t</Code>{\" \"}\n\t\t\t\t\tfile to{\" \"}\n\t\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t\tassets/sass\n\t\t\t\t\t</Code>{\" \"}\n\t\t\t\t\tand change its type to{\" \"}\n\t\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t\t.scss\n\t\t\t\t\t</Code>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tRun{\" \"}\n\t\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t\tgulp\n\t\t\t\t\t</Code>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tIn your text editor make a small change to any{\" \"}\n\t\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t\t.scss\n\t\t\t\t\t</Code>{\" \"}\n\t\t\t\t\tfile and save to trigger a build, otherwise Gulp won’t build your SASS\n\t\t\t\t\tfiles\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tGo to <a href=\"http://127.0.0.1:8000\">127.0.0.1:8000</a> and make sure\n\t\t\t\t\teverything works as before\n\t\t\t\t</li>\n\t\t\t</ol>\n\n\t\t\t<p>\n\t\t\t\tIf everything goes according to plan, Gulp will compile SASS and mirror{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tassets/sass\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tto{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tassets/css\n\t\t\t\t</Code>\n\t\t\t\t.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tNow that we setup our styles with Gulp, we can use all the wonderful\n\t\t\t\tplugins it has to offer. For example, I use{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tautoprefixer\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tto automatically prefix CSS and take care of some browser compatibly\n\t\t\t\tissues. I also use{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tuglifycss\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tto minify CSS.\n\t\t\t</p>\n\n\t\t\t<p>Install plugins:</p>\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{\"$ npm install gulp-autoprefixer gulp-uglifycss\"}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tIn{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulpfile.js\n\t\t\t\t</Code>\n\t\t\t\t:\n\t\t\t</p>\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`var gulp          = require('gulp');\n    connect       = require('gulp-connect-php'),\n    sass          = require('gulp-sass');\n+   autoprefixer  = require('gulp-autoprefixer'); // Require autoprefixer\n+   uglifycss     = require('gulp-uglifycss'); // Require uglifycss\n\n...\n\ngulp.task('sass', function() {\n    return gulp.src(\"assets/sass/**/*.scss\")\n        .pipe(sass())\n+       .pipe(autoprefixer()) // Use autoprefixer\n+       .pipe(uglifycss()) // Use uglifycss\n        .pipe(gulp.dest(\"assets/css\"));\n});\n\n...`}\n\t\t\t</Code>\n\t\t\t<p>Okay, that’s it with CSS.</p>\n\t\t\t<hr />\n\t\t\t<h2 id=\"3-auto-refresh-the-browser\">3. Auto Refresh the Browser</h2>\n\n\t\t\t<p>\n\t\t\t\tTo speed up the development process we’ll use{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tbrowser-sync\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tto sync, auto reload and auto inject styles. So, you won’t need to\n\t\t\t\treload the page again every time and you’ll see your changes\n\t\t\t\timmediately.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tInstall{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tbrowser-sync\n\t\t\t\t</Code>\n\t\t\t\t:\n\t\t\t</p>\n\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ npm install browser-sync`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tIn{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tgulpfile.js\n\t\t\t\t</Code>\n\t\t\t\t:\n\t\t\t</p>\n\n\t\t\t<Code language=\"javascript\" style={xcode} showLineNumbers>\n\t\t\t\t{`var gulp          = require('gulp');\n    connect       = require('gulp-connect-php'),\n+   browserSync   = require('browser-sync'); // Require browser-sync\n    sass          = require('gulp-sass');\n    autoprefixer  = require('gulp-autoprefixer');\n    uglifycss     = require('gulp-uglifycss');\n\ngulp.task('serve', function() {\n    // Initiate browserSync\n+   connect.server({}, function (){\n+       browserSync({\n+           proxy: '127.0.0.1:8000'\n+       });\n+   });\n\n    gulp.watch(\"assets/sass/**/*.scss\", ['sass']);\n\n    // Watch for changes in PHP files and reload the browser\n+   gulp.watch('**/*.php').on('change', function () {\n+       browserSync.reload();\n+   });\n});\n\ngulp.task('sass', function() {\n    return gulp.src(\"assets/sass/**/*.scss\")\n        .pipe(sass())\n        .pipe(autoprefixer())\n        .pipe(uglifycss())\n        .pipe(gulp.dest(\"assets/css\"))\n        // Inject css when changes occur\n+       .pipe(browserSync.stream());\n});\n\ngulp.task('default', ['serve']);`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tNow any time you make a change to a{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t.php\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tor{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t.scss\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tfile the browser will auto reload.\n\t\t\t</p>\n\t\t\t<hr />\n\t\t\t<h2 id=\"4-showing-your-work-to-others\">4. Showing Your Work to Others</h2>\n\n\t\t\t<p>\n\t\t\t\tNow that you’re proud of what you’ve accomplished, you want to showcase\n\t\t\t\tyour work to others but you don’t have a PHP server laying around and\n\t\t\t\tyou can’t use GitHub Pages or other free static hosting services because\n\t\t\t\tKirby does not generate static files (sad!). You could use{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tngrok\n\t\t\t\t</Code>{\" \"}\n\t\t\t\twhile your computer is online which isn’t ideal unless you don’t turn\n\t\t\t\toff your computer.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tHeroku to the rescue! it is an amazing platform as a service which\n\t\t\t\tsupports all popular languages out of the box, and it has a free tier.\n\t\t\t</p>\n\n\t\t\t<p>Note: because of Heroku permissions, the panel will not work.</p>\n\n\t\t\t<p>\n\t\t\t\tFirst,{\" \"}\n\t\t\t\t<a href=\"https://signup.heroku.com/php?c=70130000001xncDAAQ\">Sign up</a>{\" \"}\n\t\t\t\tfor a free Heroku account.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tThen,{\" \"}\n\t\t\t\t<a href=\"https://devcenter.heroku.com/articles/getting-started-with-php#set-up\">\n\t\t\t\t\tdownload\n\t\t\t\t</a>{\" \"}\n\t\t\t\tthe Heroku CLI and log in from the terminal:\n\t\t\t</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ heroku login\n#Enter your Heroku credentials.\n#Email: your@email.com\n#Password:`}\n\t\t\t</Code>\n\t\t\t<p>Initiate a git repository if you don’t already have one:</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ git init`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tCommit all your code to git, don’t forget to add{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tnode_modules\n\t\t\t\t</Code>{\" \"}\n\t\t\t\tto your{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\t.gitignore\n\t\t\t\t</Code>\n\t\t\t\t.\n\t\t\t</p>\n\n\t\t\t<p>Create an app on Heroku:</p>\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ heroku create PROJECT-NAME\n#Creating ⬢ PROJECT-NAME... done\n#https://PROJECT-NAME.herokuapp.com/ | https://git.heroku.com/PROJECT-NAME.git`}\n\t\t\t</Code>\n\t\t\t<p>Push your code to Heroku:</p>\n\n\t\t\t<Code language=\"bash\" style={xcode} showLineNumbers>\n\t\t\t\t{`$ git push heroku master`}\n\t\t\t</Code>\n\t\t\t<p>\n\t\t\t\tHeroku will auto detect PHP and will serve your website. Go to the url\n\t\t\t\tthat you got when you created the app, if you can’t find it, go to your{\" \"}\n\t\t\t\t<a href=\"dashboard.heroku.com/apps\">Heroku dashboard</a>, click on the\n\t\t\t\tapp name, on the top right corner click{\" \"}\n\t\t\t\t<Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tOpen app\n\t\t\t\t</Code>\n\t\t\t\t.\n\t\t\t</p>\n\n\t\t\t<p>That’s it!</p>\n\t\t</PostStyle>\n\t);\n};\n\n{\n\t/* <Code className=\"inline-code\" style={xcode}>\n\t\t\t\t\tExternalImageId\n\t\t\t\t</Code> */\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./Home\";\nimport Code from \"./Code\";\nimport Photo from \"./Photo\";\nimport About from \"./About\";\nimport Words from \"./Words\";\nimport AWS from \"./Words/AWS\";\nimport Kirby from \"./Words/Kirby\";\n\nexport default () => {\n\tReact.useEffect(() => {\n\t\tconst heapId =\n\t\t\tprocess.env.NODE_ENV !== \"production\" ? \"1037283999\" : \"878117143\";\n\t\tif (window.heap) {\n\t\t\twindow.heap.load(heapId);\n\t\t}\n\t}, []);\n\treturn (\n\t\t<Router>\n\t\t\t<Style>\n\t\t\t\t<ul className=\"navigation placeholder\">\n\t\t\t\t\t<li>abe baali</li>\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"navigation\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/\">abe baali</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/code\">code</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/photo\">photo</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/words\" className=\"words\">\n\t\t\t\t\t\t\t\twords\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/about\">about</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</div>\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/words/node-user-login-with-aws-face-recognition\" component={AWS}></Route>\n\t\t\t\t\t\t<Route path=\"/words/kirby-dev-setup\" component={Kirby}></Route>\n\t\t\t\t\t\t<Route path=\"/words\" component={Words}></Route>\n\t\t\t\t\t\t<Route path=\"/code\" component={Code}></Route>\n\t\t\t\t\t\t<Route path=\"/photo\" component={Photo}></Route>\n\t\t\t\t\t\t<Route path=\"/about\" component={About}></Route>\n\t\t\t\t\t\t<Route path=\"/\" component={Home}></Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Style>\n\t\t</Router>\n\t);\n};\n\nconst Style = styled.div`\n\tdisplay: flex;\n\tmin-height: 100vh;\n\twidth: 100vw;\n\t.placeholder {\n\t\topacity: 0;\n\t\tvisibility: hidden;\n\t\tuser-select: none;\n\t\tpointer-events: none;\n\t\tpadding: 1em;\n\t}\n\t.navigation {\n\t\tdisplay: flex;\n\t\tz-index: 3;\n\t\tflex-direction: column;\n\t\tflex: none;\n\t\ta {\n\t\t\ttext-decoration: none;\n\t\t\t:hover {\n\t\t\t\tcolor: #ff3d00;\n\t\t\t}\n\t\t}\n\t\t.top {\n\t\t\tposition: fixed;\n\t\t\tleft: 1em;\n\t\t\ttop: 1em;\n\t\t}\n\t\t.bottom {\n\t\t\tposition: fixed;\n\t\t\tleft: 1em;\n\t\t\tbottom: 1em;\n\t\t}\n\t\t/* .words {\n\t\t\tpointer-events: none;\n\t\t\ttext-decoration: line-through;\n\t\t\topacity: 0.5;\n\t\t} */\n\t}\n\t.content {\n\t\tflex: auto;\n\t\tpadding: 1em;\n\t\toverflow: auto;\n\t}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}